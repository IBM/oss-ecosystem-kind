name: Release Kind Node for Power
  
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
 
env:
  REGISTRY: ghcr.io
  REPO_NAME: ${{ github.repository }}
  IMAGE_NAME: node-ppc64le
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build
  release:
      runs-on: ppc64le
      steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: make sure repository is lowercase
        run: echo "SAFE_REPO_NAME=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
      
      - name: Do the cleanup
        run: |
          rm -rf $HOME/go*
          rm -rf go${{ secrets.GO_VERSION }}.linux-${{ secrets.ARCH }}.tar.gz*
          rm -rf tmp/kubernetes*
       
      - name: Install the go and export its path
        run: |
          wget https://go.dev/dl/go${{ secrets.GO_VERSION }}.linux-${{ secrets.ARCH }}.tar.gz
          tar -xzf go${{ secrets.GO_VERSION }}.linux-${{ secrets.ARCH }}.tar.gz
          export PATH=$PATH:root/go/bin
      
      - name: Install the Kind
        run: |
          wget https://github.com/kubernetes-sigs/kind/releases/download/${{ secrets.KIND_VERSION }}/kind-linux-${{ secrets.ARCH }}
          chmod u+x kind-linux-${{ secrets.ARCH }}
          echo -e "Check the kind version\n"
          ./kind-linux-${{ secrets.ARCH }} version
         
      - name: Clone the Kubernetes Source code\n
        run: |
          mkdir -p tmp/kubernetes
          git clone --single-branch --branch ${{ secrets.KUBE_VERSION }} https://github.com/kubernetes/kubernetes tmp/kubernetes
          
      - name: Build node image
        run: | 
          ./kind-linux-${{ secrets.ARCH }} build node-image $PWD/tmp/kubernetes --image $SAFE_REPO_NAME:${{ secrets.KUBE_VERSION }}
          
      - name: Create cluster
        run: |
          ./kind-linux-${{ secrets.ARCH }} create cluster -v7 --wait 1m --retain --image $SAFE_REPO_NAME:${{ secrets.KUBE_VERSION }}

      - name: Get Cluster status
        run: |
          # wait network is ready
          kubectl wait --for=condition=ready pods --namespace=kube-system -l k8s-app=kube-dns
          kubectl get nodes -o wide
          kubectl get pods -A

      - name: Login to GitHub Container Registry
        if: github.event_name == 'push'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish image
        run: |
          docker tag $SAFE_REPO_NAME:${{ secrets.KUBE_VERSION }} ${{ env.REGISTRY }}/${{ env.SAFE_REPO_NAME }}:${{ secrets.KUBE_VERSION }}
          docker push ${{ env.REGISTRY }}/${{ env.SAFE_REPO_NAME }}:${{ secrets.KUBE_VERSION }}
     
      - name: Delete cluster
        run: ./kind-linux-${{ secrets.ARCH }} delete cluster
